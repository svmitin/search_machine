version: '3.9'

services:

  sm_postgres:
    image: postgres:13
    container_name: sm_postgres
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./
        target: /app
      - postgres-data:/var/lib/postgresql/data
    networks:
      freedom_net:
        ipv4_address: 172.16.238.2
    environment:
      POSTGRES_DB: freedom
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      PGPASSWORD: django
    ports:
      - 5432:5432
  
  sm_nginx:
    image: nginx:latest
    container_name: sm_nginx
    restart: always
    networks:
      freedom_net:
        ipv4_address: 172.16.238.3
    volumes:
      - type: bind
        source: ./
        target: /app
      - ./deploy/docker-nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:8080
  
  sm_backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sm_backend
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./
        target: /app
    networks:
      freedom_net:
        ipv4_address: 172.16.238.4
    working_dir: /app/backend
    command: python3 manage.py runserver 0.0.0.0:80
    environment:
      - FREEDOM_DEBUG=True
      - FREEDOM_DB_HOST=sm_postgres
      - FREEDOM_DB_NAME=freedom
      - FREEDOM_DB_USER=django
      - FREEDOM_DB_PASS=django
      - FREEDOM_DB_PORT=5432
    depends_on:
      - sm_postgres
      - sm_nginx
  
  sm_frontend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sm_frontend
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./
        target: /app
    networks:
      freedom_net:
        ipv4_address: 172.16.238.5
    working_dir: /app/frontend
    command: gulp # TODO: GULP
    environment:
      - DB_HOST=postgres
      - DB_NAME=freedom
      - DB_USER=django
      - DB_PASS=django
    depends_on:
      - sm_backend

  sm_spyder_1:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sm_spyder_1
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./
        target: /app
    networks:
      freedom_net:
        ipv4_address: 172.16.238.6
    working_dir: /app/spyder
    command: cat /dev/zero # python3 bot.py --start_url=https://ru.wikipedia.org/wiki/Заглавная_страница --spyder_name=spyder_1
    environment:
      - FREEDOM_DB_HOST=sm_postgres
      - FREEDOM_DB_NAME=freedom
      - FREEDOM_DB_USER=django
      - FREEDOM_DB_PASS=django
      - FREEDOM_DB_PORT=5432
    depends_on:
      - sm_postgres
      - sm_nginx

  sm_spyder_2:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sm_spyder_2
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./
        target: /app
    networks:
      freedom_net:
        ipv4_address: 172.16.238.7
    working_dir: /app/spyder
    command: cat /dev/zero # python3 bot.py --start_url=https://mail.ru --spyder_name=spyder_2
    environment:
      - DB_HOST=sm_postgres
      - DB_NAME=freedom
      - DB_USER=django
      - DB_PASS=django
    depends_on:
      - sm_postgres
      - sm_nginx

  sm_spyder_3:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: sm_spyder_3
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./
        target: /app
    networks:
      freedom_net:
        ipv4_address: 172.16.238.8
    working_dir: /app/spyder
    command: python3 bot.py --start_url=https://petrosian.ru --spyder_name=spyder_3
    environment:
      - DB_HOST=sm_postgres
      - DB_NAME=freedom
      - DB_USER=django
      - DB_PASS=django
    depends_on:
      - sm_postgres
      - sm_nginx

volumes:
  postgres-data:

networks:
  freedom_net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
        gateway: 172.16.238.1